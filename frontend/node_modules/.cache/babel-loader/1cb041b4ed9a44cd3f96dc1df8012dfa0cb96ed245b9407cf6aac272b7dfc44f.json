{"ast":null,"code":"var _jsxFileName = \"/Users/helga_ish/Desktop/Web/dev/react-mesto-auth/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PageWithForm from \"./PageWithForm\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as auth from '../utils/auth.js';\nimport InfoTooltip from \"./InfoTooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [isInfoToolTipPopupOpen, setIsInfoToolTipPopupOpen] = React.useState(null);\n  function handleInfoToolTipClick() {\n    setIsInfoToolTipPopupOpen(true);\n  }\n  ;\n  function closeInfoToolTipPopup() {\n    setIsInfoToolTipPopupOpen(false);\n  }\n  const [isSucceed, setIsSucceed] = React.useState(false);\n  const [formValue, setFormValue] = React.useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValue({\n      ...formValue,\n      [name]: value\n    });\n  };\n  function promiseResponse(res) {\n    if (res.ok) {\n      return res.json();\n      setIsSucceed(true);\n    }\n    return Promise.reject('Произошла ошибка');\n    setIsSucceed(false);\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleInfoToolTipClick();\n    auth.register(formValue.email, formValue.password).then(res => {\n      // navigate('/sign-in', {replace: true});\n      promiseResponse(res);\n    });\n    // .catch((error) => {\n    //   setIsSucceed(false)\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(PageWithForm, {\n    name: \"register\",\n    title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n    buttonTitle: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\",\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    formValueEmail: formValue.email,\n    formValuePassword: formValue.password,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"register-to-login\",\n      children: [\"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B? \", /*#__PURE__*/_jsxDEV(Link, {\n        className: \"register-to-login_type_link\",\n        to: \"/sign-in\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 68\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n      isSucceed: isSucceed,\n      isOpen: isInfoToolTipPopupOpen,\n      onClose: closeInfoToolTipPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"BCfh9uNO0kWZRAuUod0p/1+NK+g=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","PageWithForm","Link","useNavigate","auth","InfoTooltip","jsxDEV","_jsxDEV","Register","_s","isInfoToolTipPopupOpen","setIsInfoToolTipPopupOpen","useState","handleInfoToolTipClick","closeInfoToolTipPopup","isSucceed","setIsSucceed","formValue","setFormValue","email","password","navigate","handleChange","e","name","value","target","promiseResponse","res","ok","json","Promise","reject","handleSubmit","preventDefault","register","then","title","buttonTitle","onChange","onSubmit","formValueEmail","formValuePassword","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/helga_ish/Desktop/Web/dev/react-mesto-auth/src/components/Register.js"],"sourcesContent":["import React from \"react\";\nimport PageWithForm from \"./PageWithForm\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as auth from '../utils/auth.js';\nimport InfoTooltip from \"./InfoTooltip\";\n\nexport default function Register() {\n\n    const [isInfoToolTipPopupOpen, setIsInfoToolTipPopupOpen] = React.useState(null);\n\n    function handleInfoToolTipClick() {\n        setIsInfoToolTipPopupOpen(true);\n    };\n    function closeInfoToolTipPopup() {\n        setIsInfoToolTipPopupOpen(false);\n    }\n\n    const [isSucceed, setIsSucceed] = React.useState(false);\n\n    const [formValue, setFormValue] = React.useState({\n        email: '',\n        password: '',\n      })\n      const navigate = useNavigate();\n    \n      const handleChange = (e) => {\n        const {name, value} = e.target;\n    \n        setFormValue({\n          ...formValue,\n          [name]: value\n        });\n      }\n      function promiseResponse(res) {\n        if (res.ok) {\n            return res.json();\n            setIsSucceed(true)\n        }\n        return Promise.reject('Произошла ошибка');\n        setIsSucceed(false);\n    }\n\n      const handleSubmit = (e) => {\n        e.preventDefault();\n        handleInfoToolTipClick();\n          auth.register(formValue.email, formValue.password).then((res) => {\n                // navigate('/sign-in', {replace: true});\n                promiseResponse(res);\n            })\n            // .catch((error) => {\n            //   setIsSucceed(false)\n            // });\n      }\n\n    return(\n        <PageWithForm\n        name = 'register'\n        title = 'Регистрация'\n        buttonTitle= 'Зарегистрироваться'\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n        formValueEmail={formValue.email}\n        formValuePassword={formValue.password}\n        >\n            <p className=\"register-to-login\">Уже зарегистрированы? <Link className=\"register-to-login_type_link\" to='/sign-in'>Войти</Link></p>\n            <InfoTooltip\n            isSucceed={isSucceed}\n            isOpen={isInfoToolTipPopupOpen}\n            onClose={closeInfoToolTipPopup}/>\n        </PageWithForm>\n\n    )\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}