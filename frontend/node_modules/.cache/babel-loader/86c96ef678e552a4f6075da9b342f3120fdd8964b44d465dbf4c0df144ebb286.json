{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject('Произошла ошибка');\n  }\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  getProfileUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  changeProfileUserInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  editAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n  addCard(data) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => {\n      return this._promiseResponse(res);\n    });\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._promiseResponse(res);\n    });\n  }\n  changeLikeStatus(cardId, like) {\n    return fetch(`${this._url}cards/${cardId}/likes`, {\n      method: like ? 'PUT' : 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._promiseResponse(res);\n    });\n  }\n}\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-62/',\n  headers: {\n    Authorization: '4471ba4a-88e3-4225-a99c-10facf8d16dd',\n    'content-type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","getInitialCards","fetch","method","then","getProfileUserInfo","changeProfileUserInfo","data","body","JSON","stringify","name","about","editAvatar","avatar","addCard","link","_promiseResponse","deleteCard","cardId","changeLikeStatus","like","api","Authorization"],"sources":["/Users/helga_ish/Desktop/Web/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject('Произошла ошибка');\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}cards`, {\n        method: 'GET',\n        headers: this._headers,\n    }).then((res) => {\n        return this._checkResponse(res);\n    });\n    }\n\n    getProfileUserInfo() {\n        return fetch(`${this._url}users/me`, {\n            method: 'GET',\n            headers: this._headers,\n        }).then((res) => {\n            return this._checkResponse(res);\n        });\n    }\n\n    changeProfileUserInfo(data) {\n        return fetch(`${this._url}users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        }).then((res) => {\n            return this._checkResponse(res);\n        });\n    }\n\n    editAvatar(data) {\n        return fetch(`${this._url}users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar\n            })\n        }).then((res) => {\n            return this._checkResponse(res);\n        });\n    }\n\n    addCard(data) {\n        return fetch(`${this._url}cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        }).then((res) => {\n            return this._promiseResponse(res);\n        });\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        }).then((res) => {\n            return this._promiseResponse(res);\n        });\n    }\n\n    changeLikeStatus(cardId, like) {\n        return fetch(`${this._url}cards/${cardId}/likes`, {\n            method: like ? 'PUT' : 'DELETE',\n            headers: this._headers,\n        }).then((res) => {\n            return this._promiseResponse(res);\n        });\n    }\n\n}\n\nconst api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/cohort-62/',\n    headers: {\n      Authorization: '4471ba4a-88e3-4225-a99c-10facf8d16dd',\n      'content-type': 'application/json'\n    }\n})\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}