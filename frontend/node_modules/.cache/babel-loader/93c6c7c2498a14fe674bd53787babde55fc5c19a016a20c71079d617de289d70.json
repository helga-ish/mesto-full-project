{"ast":null,"code":"var _jsxFileName = \"/Users/helga_ish/Desktop/Web/dev/mesto-react-folder/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport Footer from './Footer.js';\nimport '../index.css';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { CardContext } from '../contexts/CardContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const initialCards = React.useContext(CardContext);\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: '',\n    link: ''\n  });\n  const [currentUser, setCurrentUser] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getProfileUserInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(error => {\n      console.error(`Ошибка загрузки данных с сервера: ${error}`);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data.map(item => ({\n        id: item._id,\n        name: item.name,\n        link: item.link,\n        likes: item.likes,\n        owner: item.owner\n      })));\n    }).catch(error => {\n      console.error(`Ошибка загрузки данных с сервера: ${error}`);\n    });\n  }, []);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeStatus(card.id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c.id === card.id ? newCard : c));\n    }).catch(error => {\n      console.error(`Ошибка загрузки данных с сервера: ${error}`);\n    });\n  }\n  function handleDeleteClick(card) {\n    api.deleteCard(card.id).then(() => {\n      setCards(state => state.filter(function (c) {\n        return c.id !== card.id;\n      }));\n    }).catch(error => {\n      console.error(`Ошибка загрузки данных с сервера: ${error}`);\n    });\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  ;\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  ;\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  ;\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n  }\n  function handleUpdateUser(object) {\n    api.changeProfileUserInfo(object).then(newUserData => {\n      setCurrentUser(newUserData);\n      closeAllPopups();\n    }).catch(error => {\n      console.error(`Ошибка загрузки данных с сервера: ${error}`);\n    });\n  }\n  function handleUpdateAvatar(link) {\n    api.editAvatar(link).then(dataAvatar => {\n      setCurrentUser(dataAvatar);\n      closeAllPopups();\n    }).catch(error => {\n      console.error(`Ошибка загрузки данных с сервера: ${error}`);\n    });\n  }\n  function handleAddPlaceSubmit() {\n    api.addCard().then(newCard => {\n      setCards([newCard, ...cards]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n      value: cards,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onDeleteClick: handleDeleteClick,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G5GChxBI3nt6I/0Uio2LlxKDrnE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Main","PopupWithForm","ImagePopup","Footer","api","CurrentUserContext","CardContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","cards","setCards","useEffect","getProfileUserInfo","then","userData","catch","error","console","getInitialCards","data","map","item","id","_id","likes","owner","handleCardLike","card","isLiked","some","i","changeLikeStatus","newCard","state","c","handleDeleteClick","deleteCard","filter","handleCardClick","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleUpdateUser","object","changeProfileUserInfo","newUserData","handleUpdateAvatar","editAvatar","dataAvatar","handleAddPlaceSubmit","addCard","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onDeleteClick","isOpen","onClose","onUpdateUser","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/helga_ish/Desktop/Web/dev/mesto-react-folder/mesto-react/src/components/App.js"],"sourcesContent":["import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport Footer from './Footer.js';\nimport '../index.css';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { CardContext } from '../contexts/CardContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\n\nfunction App() {\n    // const initialCards = React.useContext(CardContext);\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({name:'', link:''});\n    const [currentUser, setCurrentUser] = React.useState('');\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        api.getProfileUserInfo()\n        .then((userData) => {\n            setCurrentUser(userData);\n        })\n        .catch((error) => {\n            console.error(`Ошибка загрузки данных с сервера: ${error}`);\n        })\n    }, []);\n\n    React.useEffect(() => {\n        api.getInitialCards()\n        .then((data) => {\n            setCards(\n                data.map((item) => ({\n                    id: item._id,\n                    name: item.name,\n                    link: item.link,\n                    likes: item.likes,\n                    owner: item.owner\n                }))\n                )\n        })\n        .catch((error) => {\n            console.error(`Ошибка загрузки данных с сервера: ${error}`);\n          });\n    }, []);\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        api.changeLikeStatus(card.id, !isLiked)\n        .then((newCard) => {\n            setCards((state) => state.map((c) => c.id === card.id ? newCard : c));\n        })\n        .catch((error) => {\n            console.error(`Ошибка загрузки данных с сервера: ${error}`);\n        });\n    }\n\n    function handleDeleteClick(card) {\n        api.deleteCard(card.id)\n        .then(() => {\n            setCards((state) => state.filter(function(c) {\n                return c.id !== card.id;\n            }))\n        })\n        .catch((error) => {\n            console.error(`Ошибка загрузки данных с сервера: ${error}`);\n        });\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    };\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    };\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    };\n\n\n    function closeAllPopups() {\n            setIsAddPlacePopupOpen(false);\n            setIsEditAvatarPopupOpen(false);\n            setIsEditProfilePopupOpen(false);\n            setSelectedCard({name:'', link:''});\n    }\n\n    function handleUpdateUser(object) {\n        api.changeProfileUserInfo(object)\n        .then((newUserData) => {\n            setCurrentUser(newUserData)\n            closeAllPopups();\n        })\n        .catch((error) => {\n            console.error(`Ошибка загрузки данных с сервера: ${error}`);\n        });\n    }\n\n    function handleUpdateAvatar(link) {\n        api.editAvatar(link)\n        .then((dataAvatar) => {\n            setCurrentUser(dataAvatar);\n            closeAllPopups();\n        })\n        .catch((error) => {\n            console.error(`Ошибка загрузки данных с сервера: ${error}`);\n        });\n    }\n\n    function handleAddPlaceSubmit() {\n        api.addCard()\n        .then((newCard) => {\n            setCards([newCard, ...cards]);\n            \n        })\n    }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <CardContext.Provider value={cards}>\n            <div>\n                <Header />\n                <Main \n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onDeleteClick={handleDeleteClick}\n                cards = {cards}\n                />\n\n                <EditProfilePopup \n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n                />\n\n                <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup \n                card = { selectedCard }\n                onClose = {closeAllPopups}\n                />\n\n\n                <Footer />\n                \n            </div>\n        </CardContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}