{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    localStorage.setItem('jwt', data.jwt);\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.user) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\nexport const getEmail = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).then(data => data).catch(err => console.log(err));\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","response","json","res","localStorage","setItem","data","jwt","catch","err","console","log","authorize","user","getEmail","token"],"sources":["/Users/helga_ish/Desktop/Web/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((res) => {\n    localStorage.setItem('jwt', data.jwt);\n  })\n  .catch((err) => console.log(err));\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then((response => response.json()))\n    .then((data) => {\n      if (data.user){\n        localStorage.setItem('jwt', data.jwt);\n        return data;\n      }\n    })\n    .catch(err => console.log(err))\n  };\n\n  export const getEmail = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\" : `Bearer ${token}`\n      }\n    })\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => data)\n    .catch((err) => console.log(err));\n  };"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;EACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,GAAG,IAAK;IACbC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEC,IAAI,CAACC,GAAG,CAAC;EACvC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGA,CAACpB,KAAK,EAAEC,QAAQ,KAAK;EAC1C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAE,CACnCF,IAAI,CAAEM,IAAI,IAAK;IACd,IAAIA,IAAI,CAACO,IAAI,EAAC;MACZT,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEC,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAIC,KAAK,IAAK;EACjC,OAAOrB,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASmB,KAAM;IACpC;EACF,CAAC,CAAC,CACDf,IAAI,CAAEC,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;EACxB,CAAC,CAAC,CACDF,IAAI,CAAEM,IAAI,IAAKA,IAAI,CAAC,CACpBE,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}